// @todo Color variables should be moved to a file (`variables.less` or `colors.less`) and we should import them when needed.
@background-white: #fff;
@background-light: #f0f2f5;

.transition-move {
  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}

// @todo Similarly to achieve a uniform design, we should generalize what we can. We might use completely different box shadows in different parts of the projects, since everything is component-specific.
.box-shadow {
  box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2), 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12);
}

nz-content {
  background: @background-light;
  padding: 2rem;
  height: 100%;
}

nz-sider {
  background: @background-light;
}

.sider-menu {
  height: 100%;
  border-right: 0;
}

.inner-layout {
  background-color: @background-white;
  padding-left: 2rem;

  > nz-content {
    display: flex;
    justify-content: center;
  }
}

.form-container {
  max-width: 100%;
  display: inline-block;
  vertical-align: top;
  position: static;
}

// @todo We alternately use pixels and rem for defining margins and padding. We should stick with one. For margins/paddings/font-sizes rem would be better.
.p-3 {
  padding: 3rem;
}

.mt-1 {
  margin-top: 1rem;
}

.element-list {
  border: solid 1px #ccc;
  background: @background-white;
  border-radius: 4px;
  overflow: hidden;
  display: block;
}

.element-box {
  color: rgba(0, 0, 0, 0.87);
  padding-bottom: 2rem;
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
  cursor: move;
  background: @background-white;
}

.cdk-drag-preview {
  box-sizing: border-box;
  border-radius: 4px;
  .box-shadow;
}

.cdk-drag-placeholder {
  opacity: 0;
}

.cdk-drag-animating {
  .transition-move;
}

/*.element-box:last-child {*/
/*  border: none;*/
/*  padding: 0;*/
/*}*/

.element-list.cdk-drop-list-dragging .element-box:not(.cdk-drag-placeholder) {
  padding: 0;
  .transition-move;
}
